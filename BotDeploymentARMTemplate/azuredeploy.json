{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"cogServicesSku": {
			"type": "string",
			"allowedValues": [
				"F0", //free one
				"S0"
			]
		},
		"cogServicesName": {
			"type": "string"
		},
		"cogServicesKind": {
			"type": "string",
			"allowedValues": [
				"Academic",
				"Bing.Autosuggest",
				"Bing.Search",
				"Bing.Speech",
				"Bing.SpellCheck",
				"ComputerVision",
				"ContentModerator",
				"CustomSpeech",
				"Emotion",
				"Face",
				"LUIS",
				"Recommendations",
				"SpeakerRecognition",
				"Speech",
				"SpeechTranslation",
				"TextAnalytics",
				"TextTranslation",
				"WebLM"
			]
		},
		"botApiName": {
			"type": "string"
		},
		"hostingPlanName": {
			"type": "string",
			"minLength": 1
		},
		"hostingSkuName": {
			"type": "string",
			"defaultValue": "F1",
			"allowedValues": [
				"F1",
				"D1",
				"B1",
				"B2",
				"B3",
				"S1",
				"S2",
				"S3",
				"P1",
				"P2",
				"P3",
				"P4"
			],
			"metadata": {
				"description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
			}
		},
		"hostingSkuCapacity": {
			"type": "int",
			"defaultValue": 1,
			"minValue": 1,
			"metadata": {
				"description": "Describes plan's instance count"
			}
		},
		"MicrosoftAppId": {
			"type": "string"
		},
		"MicrosoftAppPassword": {
			"type": "string"
		},
		"LuisModelId": {
			"type": "string"
		},
		"LuisSubscriptionKey": {
			"type": "string"
		},
		"QnASubscriptionKey": {
			"type": "string"
		},
		"QnAKbId": {
			"type": "string"
		},
		"StubEmailService": {
			"type": "string"
		},
		"TraceAllActivities": {
			"type": "string"
		},
		"UseAzureTableBotState": {
			"type": "string"
		},
		"LayeredConversationConfigLocation": {
			"type": "string"
		},
		"GetLayeredConversationConfigPathAutomatically": {
			"type": "string"
		},
		"SendGridApiKey": {
			"type": "string"
		},
		"aad:Callback": {
			"type": "string"
		},
		"PostLogoutUrl": {
			"type": "string"
		},
		"storageAccountType": {
			"type": "string",
			"defaultValue": "Standard_LRS",
			"allowedValues": [
				"Standard_LRS",
				"Standard_ZRS",
				"Standard_GRS",
				"Standard_RAGRS",
				"Premium_LRS"
			]
		},
		"storageAccountName": {
			"type": "string"
		},
		"appInsightsName": {
			"type": "string"
		},
		"botChannelRegistrationName": { "type": "string" },
		"botChannelRegistrationSku": {
			"type": "string",
			"defaultValue": "F0",
			"allowedValues": [
				"F0",
				"S1"
			]
		},
		"workloadTag": {
			"type": "string"
		},
		"LuisDomain": { "type": "string" },
		"QueryQnaFromLuis": { "type": "string" },
		"MinimumScoreForLuisMatch": { "type": "string" },
		"UseQnACacheService": { "type": "string" },
		"QnACacheMinutes": { "type": "string" },
		"MenuCacheMinutes": { "type": "string" }
	},
	//"variables": {
	//		"workloadTag": "Bot Framework"
	//},
	"resources": [
		// Change the hardcoded string to parameters
		//{
		//	"name": "[parameters('cogServicesName')]",
		//	"type": "Microsoft.CognitiveServices/accounts",
		//	"apiVersion": "2017-04-18",
		//	"sku": {
		//		"name": "[parameters('cogServicesSku')]"
		//	},
		//	"kind": "[parameters('cogServicesKind')]",
		//	"location": "Southeast Asia",
		//	"tags": {
		//		"displayName": "Cognitive Services - LUIS",
		//		"workload": "[parameters('workloadTag')]"
		//	},
		//	"properties": {}
		//},
		{
			"name": "[parameters('storageAccountName')]",
			"type": "Microsoft.Storage/storageAccounts",
			"location": "[resourceGroup().location]",
			"apiVersion": "2015-06-15",
			"dependsOn": [],
			"tags": {
				"displayName": "Storage Account",
				"workload": "[parameters('workloadTag')]"
			},
			"properties": {
				"accountType": "[parameters('storageAccountType')]"
			}
		},
		{
			"apiVersion": "2015-08-01",
			"name": "[parameters('hostingPlanName')]",
			"type": "Microsoft.Web/serverfarms",
			"location": "[resourceGroup().location]",
			"tags": {
				"displayName": "HostingPlan",
				"workload": "[parameters('workloadTag')]"
			},
			"sku": {
				"name": "[parameters('hostingSkuName')]",
				"capacity": "[parameters('hostingSkuCapacity')]"
			},
			"properties": {
				"name": "[parameters('hostingPlanName')]"
			}
		},
		{
			"apiVersion": "2015-08-01",
			"name": "[parameters('botApiName')]",
			"type": "Microsoft.Web/sites",
			"location": "[resourceGroup().location]",
			"tags": {
				"[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
				"displayName": "Website",
				"workload": "[parameters('workloadTag')]"
			},
			"dependsOn": [
				"[resourceId('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
				"[resourceId('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
				"[resourceId('microsoft.insights/components/', parameters('appInsightsName'))]"
				//"[resourceId('Microsoft.CognitiveServices/accounts/', parameters('cogServicesName'))]"
			],
			"properties": {
				"name": "[parameters('botApiName')]",
				"serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
				"APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('microsoft.insights/components/', parameters('appInsightsName')), '2015-05-01').InstrumentationKey]",
				"siteConfig": {
					"appSettings": [
						{
							"name": "MicrosoftAppId",
							"value": "[parameters('MicrosoftAppId')]"
						},
						{
							"name": "MicrosoftAppPassword",
							"value": "[parameters('MicrosoftAppPassword')]"
						},
						{
							"name": "LuisModelId",
							"value": "[parameters('LuisModelId')]"
						},
						{
							"name": "LuisSubscriptionKey",
							"value": "[parameters('LuisSubscriptionKey')]"
						},
						{
							"name":"APPINSIGHTS_INSTRUMENTATIONKEY",
							"value": "[reference(resourceId('microsoft.insights/components/', parameters('appInsightsName')), '2015-05-01').InstrumentationKey]"
						},
						//{
						//	"name": "LuisSubscriptionKey",
						//	"value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('cogServicesName')), '2017-04-18').key1]"
						//},
						{
							"name": "QnASubscriptionKey",
							"value": "[parameters('QnASubscriptionKey')]"
						},
						{
							"name": "QnAKbId",
							"value": "[parameters('QnAKbId')]"
						},
						{
							"name": "StubEmailService",
							"value": "[parameters('StubEmailService')]"
						},
						{
							"name": "TraceAllActivities",
							"value": "[parameters('TraceAllActivities')]"
						},
						{
							"name": "UseAzureTableBotState",
							"value": "[parameters('UseAzureTableBotState')]"
						},
						{
							"name": "LayeredConversationConfigLocation",
							"value": ""
						},
						{
							"name": "GetLayeredConversationConfigPathAutomatically",
							"value": "[parameters('GetLayeredConversationConfigPathAutomatically')]"
						},
						{
							"name": "SendGridApiKey",
							"value": "[parameters('SendGridApiKey')]"
						},
						{
							"name": "aad:Callback",
							"value": "[parameters('aad:Callback')]"
						},
						{
							"name": "PostLogoutUrl",
							"value": "[parameters('PostLogoutUrl')]"
						},
						{
							"name": "LuisDomain",
							"value": "[parameters('LuisDomain')]"
						},
						{
							"name": "QueryQnaFromLuis",
							"value": "[parameters('QueryQnaFromLuis')]"
						},
						{
							"name": "MinimumScoreForLuisMatch",
							"value": "[parameters('MinimumScoreForLuisMatch')]"
						},
						{
							"name": "UseQnACacheService",
							"value": "[parameters('UseQnACacheService')]"
						},
						{
							"name": "QnACacheMinutes",
							"value": "[parameters('QnACacheMinutes')]"
						},
						{
							"name": "MenuCacheMinutes",
							"value": "[parameters('MenuCacheMinutes')]"
						}
					]
				}
			},
			"resources": [
				{
					"apiVersion": "2015-08-01",
					"type": "config",
					"name": "connectionstrings",
					"dependsOn": [
						"[resourceId('Microsoft.Web/sites/', parameters('botApiName'))]"
					],
					"properties": {
						"StorageConnectionString": {
							"value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2016-01-01').keys[0].value,';EndpointSuffix=core.windows.net')]",
							"type": "Custom"
						}
					}
				}
			]
		},
		{
			"apiVersion": "2014-04-01",
			"name": "[concat(parameters('hostingPlanName'), '-', resourceGroup().name)]",
			"type": "Microsoft.Insights/autoscalesettings",
			"location": "[resourceGroup().location]",
			"tags": {
				"[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
				"displayName": "AutoScaleSettings"
			},
			"dependsOn": [
				"[resourceId('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
			],
			"properties": {
				"profiles": [
					{
						"name": "Default",
						"capacity": {
							"minimum": 1,
							"maximum": 2,
							"default": 1
						},
						"rules": [
							{
								"metricTrigger": {
									"metricName": "CpuPercentage",
									"metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
									"timeGrain": "PT1M",
									"statistic": "Average",
									"timeWindow": "PT10M",
									"timeAggregation": "Average",
									"operator": "GreaterThan",
									"threshold": 80.0
								},
								"scaleAction": {
									"direction": "Increase",
									"type": "ChangeCount",
									"value": 1,
									"cooldown": "PT10M"
								}
							},
							{
								"metricTrigger": {
									"metricName": "CpuPercentage",
									"metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
									"timeGrain": "PT1M",
									"statistic": "Average",
									"timeWindow": "PT1H",
									"timeAggregation": "Average",
									"operator": "LessThan",
									"threshold": 60.0
								},
								"scaleAction": {
									"direction": "Decrease",
									"type": "ChangeCount",
									"value": 1,
									"cooldown": "PT1H"
								}
							}
						]
					}
				],
				"enabled": false,
				"name": "[concat(parameters('hostingPlanName'), '-', resourceGroup().name)]",
				"targetResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
			}
		},
		{
			"apiVersion": "2014-04-01",
			"name": "[concat('ServerErrors ', parameters('botApiName'))]",
			"type": "Microsoft.Insights/alertrules",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.Web/sites/', parameters('botApiName'))]"
			],
			"tags": {
				"[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('botApiName'))]": "Resource",
				"displayName": "ServerErrorsAlertRule"
			},
			"properties": {
				"name": "[concat('ServerErrors ', parameters('botApiName'))]",
				"description": "[concat(parameters('botApiName'), ' has some server errors, status code 5xx.')]",
				"isEnabled": false,
				"condition": {
					"odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
					"dataSource": {
						"odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
						"resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('botApiName'))]",
						"metricName": "Http5xx"
					},
					"operator": "GreaterThan",
					"threshold": 0.0,
					"windowSize": "PT5M"
				},
				"action": {
					"odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
					"sendToServiceOwners": true,
					"customEmails": []
				}
			}
		},
		{
			"apiVersion": "2014-04-01",
			"name": "[concat('ForbiddenRequests ', parameters('botApiName'))]",
			"type": "Microsoft.Insights/alertrules",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.Web/sites/', parameters('botApiName'))]"
			],
			"tags": {
				"[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('botApiName'))]": "Resource",
				"displayName": "ForbiddenRequestsAlertRule"
			},
			"properties": {
				"name": "[concat('ForbiddenRequests ', parameters('botApiName'))]",
				"description": "[concat(parameters('botApiName'), ' has some requests that are forbidden, status code 403.')]",
				"isEnabled": false,
				"condition": {
					"odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
					"dataSource": {
						"odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
						"resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('botApiName'))]",
						"metricName": "Http403"
					},
					"operator": "GreaterThan",
					"threshold": 0,
					"windowSize": "PT5M"
				},
				"action": {
					"odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
					"sendToServiceOwners": true,
					"customEmails": []
				}
			}
		},
		{
			"apiVersion": "2014-04-01",
			"name": "[concat('CPUHigh ', parameters('hostingPlanName'))]",
			"type": "Microsoft.Insights/alertrules",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
			],
			"tags": {
				"[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
				"displayName": "CPUHighAlertRule"
			},
			"properties": {
				"name": "[concat('CPUHigh ', parameters('hostingPlanName'))]",
				"description": "[concat('The average CPU is high across all the instances of ', parameters('hostingPlanName'))]",
				"isEnabled": false,
				"condition": {
					"odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
					"dataSource": {
						"odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
						"resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
						"metricName": "CpuPercentage"
					},
					"operator": "GreaterThan",
					"threshold": 90,
					"windowSize": "PT15M"
				},
				"action": {
					"odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
					"sendToServiceOwners": true,
					"customEmails": []
				}
			}
		},
		{
			"apiVersion": "2014-04-01",
			"name": "[concat('LongHttpQueue ', parameters('hostingPlanName'))]",
			"type": "Microsoft.Insights/alertrules",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
			],
			"tags": {
				"[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
				"displayName": "LongHttpQueueAlertRule"
			},
			"properties": {
				"name": "[concat('LongHttpQueue ', parameters('hostingPlanName'))]",
				"description": "[concat('The HTTP queue for the instances of ', parameters('hostingPlanName'), ' has a large number of pending requests.')]",
				"isEnabled": false,
				"condition": {
					"odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
					"dataSource": {
						"odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
						"resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
						"metricName": "HttpQueueLength"
					},
					"operator": "GreaterThan",
					"threshold": 100.0,
					"windowSize": "PT5M"
				},
				"action": {
					"odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
					"sendToServiceOwners": true,
					"customEmails": []
				}
			}
		},
		{
			"apiVersion": "2014-04-01",
			"name": "[parameters('appInsightsName')]",
			"type": "Microsoft.Insights/components",
			"location": "East US",
			"dependsOn": [
				//"[resourceId('Microsoft.Web/sites/', parameters('botApiName'))]"
			],
			"tags": {
				"[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('botApiName'))]": "Resource",
				"displayName": "AppInsightsComponent",
				"workload": "[parameters('workloadTag')]"
			},
			"properties": {
				"applicationId": "[parameters('botApiName')]"
			}
		},
		{
			"apiVersion": "2017-12-01",
			"type": "Microsoft.BotService/botServices",
			"name": "[parameters('botChannelRegistrationName')]",
			"location": "global",
			"kind": "bot",
			"sku": {
				"name": "[parameters('botChannelRegistrationSku')]"
			},
			"tags": {
				"displayName": "Bot Channel Registration",
				"workload": "[parameters('workloadTag')]"
			},
			"properties": {
				"name": "[parameters('botChannelRegistrationName')]",
				"displayName": "[parameters('botChannelRegistrationName')]",
				"endpoint": "[concat('https://',parameters('botApiName'),'.azurewebsites.net/api/messages')]",
				"msaAppId": "[parameters('MicrosoftAppId')]",
				"developerAppInsightsApplicationId": "[parameters('appInsightsName')]",
				"developerAppInsightKey": "[reference(resourceId('microsoft.insights/components/', parameters('appInsightsName')), '2015-05-01').InstrumentationKey]",
				"developerAppInsightSecret": "listKeys(resourceId('microsoft.insights/components/', parameters('appInsightsName')), '2015-05-01').keys[0].value"
			},
			"dependsOn": [
				"[resourceId('microsoft.insights/components/', parameters('appInsightsName'))]"
			]
		}
	]
}
